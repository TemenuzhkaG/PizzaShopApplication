@model PizzaShop.Core.ViewModels.Pizzas.IndexViewModel
@{
    this.Layout = "/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Pizzas";

}

<h1>All Pizzas</h1>

<p>
    @Html.ActionLink("Create New Pizza", "Create")
</p>

<table id="customers">

    <tr>
        <th>Name</th>
        <th>Description</th>
        <th>Price</th>
        <th>ImageUrl</th>
        <th>Category name</th>
        <th>Edit</th>
        <th>Delete</th>
    </tr>

    @foreach (var item in Model.Pizzas)
    {
        <tr>
            <td>
                @Html.DisplayFor(x => item.Name)
            </td>
            <td>
                @Html.DisplayFor(x => item.Description)
            </td>
            <td>
                @Html.DisplayFor(x => item.Price)

            </td>
            <td>
                @Html.DisplayFor(x => item.ImageUrl)

            </td>
            <td>
                @Html.DisplayFor(x => item.Category.Name)
            </td>
            <td>
                <a href="/Pizzas/Edit?id=@item.Id">Edit</a>
            </td>
            <td>
                <a href="/Pizzas/Delete?id=@item.Id"
                   onclick="return confirm('Аre you sure you want to delete this pizza?');">Delete</a>
            </td>
        </tr>
    }

</table>

<div>
    @{
        string controller = this.ViewContext.RouteData.Values["controller"].ToString();
        string action = this.ViewContext.RouteData.Values["action"].ToString();
    }
    @for (int i = 0; i < Model.Pager.PagesCount; i++)
    {
        <a class="@(Model.Pager.Page == (i + 1) ? "colored" : "")"
           href="/@controller/@action?Pager.Page=@(i+1)&Pager.ItemsPerPage=@Model.Pager.ItemsPerPage">
            @(i+1)
        </a>
    }
    <script>
                function PagingItems_OnChange() {

                    let PagingItems = document.getElementById("PagingItems");

                    document.location.href = "/@controller/@action?Pager.ItemsPerPage=" + PagingItems.value;
                }
    </script>

</div>

